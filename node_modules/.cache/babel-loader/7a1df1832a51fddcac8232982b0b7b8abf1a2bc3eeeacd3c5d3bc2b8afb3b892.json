{"ast":null,"code":"var _jsxFileName = \"/Users/danielq/Documents/GitHub/emiride.com/emiride/src/components/MapComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapComponent(_ref) {\n  _s();\n  let {\n    latitude,\n    longitude\n  } = _ref;\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const [shouldLoadMap, setShouldLoadMap] = useState(false);\n  const location = useLocation();\n  useEffect(() => {\n    const handleScroll = () => {\n      const {\n        top,\n        bottom\n      } = mapRef.current.getBoundingClientRect();\n      const isIntersecting = top < window.innerHeight && bottom >= 0;\n      if (isIntersecting) {\n        setShouldLoadMap(true);\n        window.removeEventListener('scroll', handleScroll);\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  useEffect(() => {\n    if (shouldLoadMap && !window.google) {\n      // Load the Google Maps JavaScript API script\n      const googleMapsScript = document.createElement('script');\n      googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBUh1HZCtb0h9Q3pfvLGyGh5YMOTHl6v-4`;\n      googleMapsScript.async = true;\n      googleMapsScript.addEventListener('load', initializeMap);\n      window.document.body.appendChild(googleMapsScript);\n      return () => {\n        googleMapsScript.removeEventListener('load', initializeMap);\n        window.document.body.removeChild(googleMapsScript);\n      };\n    } else if (shouldLoadMap && window.google) {\n      initializeMap();\n    }\n  }, [shouldLoadMap]);\n  const initializeMap = () => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: {\n        lat: latitude,\n        lng: longitude\n      },\n      zoom: 16\n    });\n    const marker = new window.google.maps.Marker({\n      position: {\n        lat: latitude,\n        lng: longitude\n      },\n      map: map,\n      title: 'E M I Ride Rent a Car' // Set the title for the marker\n    });\n\n    const infoWindow = new window.google.maps.InfoWindow({\n      content: marker.getTitle() // Use the marker's title as the content of the info window\n    });\n\n    infoWindow.open(map, marker); // Open the info window immediately\n\n    // Store the marker reference for later use\n    markerRef.current = marker;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: '100%',\n      height: '650px',\n      margin: '40px'\n    },\n    children: location.pathname === '/' || location.pathname === '/inicio' || location.pathname === '/INICIO' ? null : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Map Component should be rendered on the root (\\\"/\\\") or \\\"/inicio\\\" routes.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(MapComponent, \"mIfqCA/DlAkSYoNpLT/3TntiNiQ=\", false, function () {\n  return [useLocation];\n});\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useLocation","MapComponent","latitude","longitude","mapRef","markerRef","shouldLoadMap","setShouldLoadMap","location","handleScroll","top","bottom","current","getBoundingClientRect","isIntersecting","window","innerHeight","removeEventListener","addEventListener","google","googleMapsScript","document","createElement","src","async","initializeMap","body","appendChild","removeChild","map","maps","Map","center","lat","lng","zoom","marker","Marker","position","title","infoWindow","InfoWindow","content","getTitle","open","width","height","margin","pathname"],"sources":["/Users/danielq/Documents/GitHub/emiride.com/emiride/src/components/MapComponent.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nfunction MapComponent({ latitude, longitude }) {\n  const mapRef = useRef(null);\n  const markerRef = useRef(null);\n  const [shouldLoadMap, setShouldLoadMap] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const { top, bottom } = mapRef.current.getBoundingClientRect();\n      const isIntersecting = top < window.innerHeight && bottom >= 0;\n\n      if (isIntersecting) {\n        setShouldLoadMap(true);\n        window.removeEventListener('scroll', handleScroll);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (shouldLoadMap && !window.google) {\n      // Load the Google Maps JavaScript API script\n      const googleMapsScript = document.createElement('script');\n      googleMapsScript.src = `https://maps.googleapis.com/maps/api/js?key=AIzaSyBUh1HZCtb0h9Q3pfvLGyGh5YMOTHl6v-4`;\n      googleMapsScript.async = true;\n      googleMapsScript.addEventListener('load', initializeMap);\n      window.document.body.appendChild(googleMapsScript);\n\n      return () => {\n        googleMapsScript.removeEventListener('load', initializeMap);\n        window.document.body.removeChild(googleMapsScript);\n      };\n    } else if (shouldLoadMap && window.google) {\n      initializeMap();\n    }\n  }, [shouldLoadMap]);\n\n  const initializeMap = () => {\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: { lat: latitude, lng: longitude },\n      zoom: 16,\n    });\n\n    const marker = new window.google.maps.Marker({\n      position: { lat: latitude, lng: longitude },\n      map: map,\n      title: 'E M I Ride Rent a Car', // Set the title for the marker\n    });\n\n    const infoWindow = new window.google.maps.InfoWindow({\n      content: marker.getTitle(), // Use the marker's title as the content of the info window\n    });\n\n    infoWindow.open(map, marker); // Open the info window immediately\n\n    // Store the marker reference for later use\n    markerRef.current = marker;\n  };\n\n  return (\n    <div ref={mapRef} style={{ width: '100%', height: '650px', margin: '40px' }}>\n      {location.pathname === '/' || location.pathname === '/inicio' || location.pathname === '/INICIO' ? null : (\n        <p>Map Component should be rendered on the root (\"/\") or \"/inicio\" routes.</p>\n      )}\n    </div>\n  );\n}\n\nexport default MapComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}